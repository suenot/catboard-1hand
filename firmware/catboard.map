Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.2/avr35/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr35/crtusb162.o (exit)
/usr/lib/gcc/avr/4.8.2/avr35/libgcc.a(_copy_data.o)
                              catboard.o (__do_copy_data)
/usr/lib/gcc/avr/4.8.2/avr35/libgcc.a(_clear_bss.o)
                              catboard.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

pressed             0x3c              catboard.o

Discarded input sections

 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr35/crtusb162.o
 .text          0x0000000000000000        0x0 catboard.o
 .text          0x0000000000000000        0x0 usb_keyboard.o
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr35/libgcc.a(_exit.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr35/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr35/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr35/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr35/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr35/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr35/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr35/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr35/libgcc.a(_exit.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr35/libgcc.a(_copy_data.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr35/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr35/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr35/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr35/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr35/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr35/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr35/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr35/libgcc.a(_copy_data.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr35/libgcc.a(_clear_bss.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr35/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr35/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr35/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr35/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr35/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr35/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr35/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr35/libgcc.a(_clear_bss.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000010000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr35/crtusb162.o
LOAD catboard.o
LOAD usb_keyboard.o
LOAD /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr35/libm.a
START GROUP
LOAD /usr/lib/gcc/avr/4.8.2/avr35/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr35/libm.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr35/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0xf5a
 *(.vectors)
 .vectors       0x0000000000000000       0x74 /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr35/crtusb162.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x0000000000000074       0xd2 usb_keyboard.o
                0x0000000000000146                . = ALIGN (0x2)
                0x0000000000000146                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000146        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000146                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000146                __ctors_start = .
 *(.ctors)
                0x0000000000000146                __ctors_end = .
                0x0000000000000146                __dtors_start = .
 *(.dtors)
                0x0000000000000146                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000146        0x0 /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr35/crtusb162.o
                0x0000000000000146                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000146        0xc /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr35/crtusb162.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000152       0x16 /usr/lib/gcc/avr/4.8.2/avr35/libgcc.a(_copy_data.o)
                0x0000000000000152                __do_copy_data
 .init4         0x0000000000000168       0x10 /usr/lib/gcc/avr/4.8.2/avr35/libgcc.a(_clear_bss.o)
                0x0000000000000168                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000178        0x4 /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr35/crtusb162.o
 *(.init9)
 *(.text)
 .text          0x000000000000017c        0x2 /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr35/crtusb162.o
                0x000000000000017c                __vector_22
                0x000000000000017c                __vector_28
                0x000000000000017c                __vector_1
                0x000000000000017c                __vector_24
                0x000000000000017c                __bad_interrupt
                0x000000000000017c                __vector_6
                0x000000000000017c                __vector_3
                0x000000000000017c                __vector_23
                0x000000000000017c                __vector_25
                0x000000000000017c                __vector_13
                0x000000000000017c                __vector_17
                0x000000000000017c                __vector_19
                0x000000000000017c                __vector_7
                0x000000000000017c                __vector_27
                0x000000000000017c                __vector_5
                0x000000000000017c                __vector_4
                0x000000000000017c                __vector_9
                0x000000000000017c                __vector_2
                0x000000000000017c                __vector_21
                0x000000000000017c                __vector_15
                0x000000000000017c                __vector_8
                0x000000000000017c                __vector_26
                0x000000000000017c                __vector_14
                0x000000000000017c                __vector_10
                0x000000000000017c                __vector_16
                0x000000000000017c                __vector_18
                0x000000000000017c                __vector_20
                0x000000000000017e                . = ALIGN (0x2)
 *(.text.*)
 .text.init_ports
                0x000000000000017e       0x16 catboard.o
                0x000000000000017e                init_ports
 .text.init     0x0000000000000194       0x48 catboard.o
                0x0000000000000194                init
 .text.caps_lock_change_layer
                0x00000000000001dc       0x80 catboard.o
                0x00000000000001dc                caps_lock_change_layer
 .text.change_layout
                0x000000000000025c       0x50 catboard.o
                0x000000000000025c                change_layout
 .text.get_code
                0x00000000000002ac       0x4a catboard.o
                0x00000000000002ac                get_code
 .text.repeat_tick
                0x00000000000002f6      0x10c catboard.o
                0x00000000000002f6                repeat_tick
 .text.send     0x0000000000000402       0x34 catboard.o
                0x0000000000000402                send
 .text.key_press
                0x0000000000000436      0x314 catboard.o
                0x0000000000000436                key_press
 .text.key_release
                0x000000000000074a      0x28e catboard.o
                0x000000000000074a                key_release
 .text.poll     0x00000000000009d8       0xdc catboard.o
                0x00000000000009d8                poll
 .text.startup.main
                0x0000000000000ab4       0x2e catboard.o
                0x0000000000000ab4                main
 .text.usb_wait_in_ready
                0x0000000000000ae2        0xa usb_keyboard.o
 .text.usb_init
                0x0000000000000aec       0x28 usb_keyboard.o
                0x0000000000000aec                usb_init
 .text.usb_configured
                0x0000000000000b14        0x6 usb_keyboard.o
                0x0000000000000b14                usb_configured
 .text.usb_keyboard_send
                0x0000000000000b1a       0x74 usb_keyboard.o
                0x0000000000000b1a                usb_keyboard_send
 .text.usb_keyboard_press
                0x0000000000000b8e       0x1a usb_keyboard.o
                0x0000000000000b8e                usb_keyboard_press
 .text.__vector_11
                0x0000000000000ba8       0xbe usb_keyboard.o
                0x0000000000000ba8                __vector_11
 .text.__vector_12
                0x0000000000000c66      0x2f0 usb_keyboard.o
                0x0000000000000c66                __vector_12
                0x0000000000000f56                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000f56        0x0 /usr/lib/gcc/avr/4.8.2/avr35/libgcc.a(_exit.o)
                0x0000000000000f56                exit
                0x0000000000000f56                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000f56        0x4 /usr/lib/gcc/avr/4.8.2/avr35/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000f5a                _etext = .

.data           0x0000000000800100      0x132 load address 0x0000000000000f5a
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr35/crtusb162.o
 .data          0x0000000000800100        0xd catboard.o
                0x0000000000800100                last_key
                0x0000000000800101                led
                0x0000000000800102                turbo_repeat
                0x0000000000800103                queue
                0x000000000080010a                layout
                0x000000000080010c                os_mode
 .data          0x000000000080010d        0x2 usb_keyboard.o
 .data          0x000000000080010f        0x0 /usr/lib/gcc/avr/4.8.2/avr35/libgcc.a(_exit.o)
 .data          0x000000000080010f        0x0 /usr/lib/gcc/avr/4.8.2/avr35/libgcc.a(_copy_data.o)
 .data          0x000000000080010f        0x0 /usr/lib/gcc/avr/4.8.2/avr35/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 .rodata        0x000000000080010f      0x123 catboard.o
                0x000000000080010f                layer_fnlock
                0x000000000080014b                layer_fn
                0x0000000000800187                layer1
                0x00000000008001c3                col_bit
                0x00000000008001cf                col_pin
                0x00000000008001e7                row_bit
                0x00000000008001ec                row_port
                0x00000000008001f6                layer2
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800232                . = ALIGN (0x2)
                0x0000000000800232                _edata = .
                0x0000000000800232                PROVIDE (__data_end, .)

.bss            0x0000000000800232       0x54
                0x0000000000800232                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800232        0xd catboard.o
                0x0000000000800232                repeat_time
                0x0000000000800234                release_time
                0x0000000000800236                press_time2
                0x0000000000800238                press_time
                0x000000000080023a                locked
                0x000000000080023b                prev_layer
                0x000000000080023d                mod_keys
                0x000000000080023e                caps_lock_led
 .bss           0x000000000080023f        0xb usb_keyboard.o
                0x000000000080023f                keyboard_modifier_keys
                0x0000000000800240                keyboard_keys
                0x0000000000800246                keyboard_leds
 *(.bss*)
 *(COMMON)
 COMMON         0x000000000080024a       0x3c catboard.o
                0x000000000080024a                pressed
                0x0000000000800286                PROVIDE (__bss_end, .)
                0x0000000000000f5a                __data_load_start = LOADADDR (.data)
                0x000000000000108c                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800286        0x0
                0x0000000000800286                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800286                PROVIDE (__noinit_end, .)
                0x0000000000800286                _end = .
                0x0000000000800286                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000      0x8c4
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr35/crtusb162.o
 .stab          0x00000000000006cc       0x6c /usr/lib/gcc/avr/4.8.2/avr35/libgcc.a(_exit.o)
                                         0x78 (size before relaxing)
 .stab          0x0000000000000738       0xd8 /usr/lib/gcc/avr/4.8.2/avr35/libgcc.a(_copy_data.o)
                                         0xe4 (size before relaxing)
 .stab          0x0000000000000810       0xb4 /usr/lib/gcc/avr/4.8.2/avr35/libgcc.a(_clear_bss.o)
                                         0xc0 (size before relaxing)

.stabstr        0x0000000000000000       0xe5
 *(.stabstr)
 .stabstr       0x0000000000000000       0xe5 /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr35/crtusb162.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x21
 *(.comment)
 .comment       0x0000000000000000       0x21 catboard.o
                                         0x22 (size before relaxing)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0xc0
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x70 catboard.o
 .debug_aranges
                0x0000000000000070       0x50 usb_keyboard.o

.debug_pubnames
                0x0000000000000000       0xbe
 *(.debug_pubnames)
 .debug_pubnames
                0x0000000000000000       0xbe usb_keyboard.o

.debug_info     0x0000000000000000     0x10aa
 *(.debug_info)
 .debug_info    0x0000000000000000      0x9a6 catboard.o
 .debug_info    0x00000000000009a6      0x704 usb_keyboard.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x0000000000000000      0x53c
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x367 catboard.o
 .debug_abbrev  0x0000000000000367      0x1d5 usb_keyboard.o

.debug_line     0x0000000000000000      0xb31
 *(.debug_line)
 .debug_line    0x0000000000000000      0x425 catboard.o
 .debug_line    0x0000000000000425      0x70c usb_keyboard.o

.debug_frame    0x0000000000000000      0x1c0
 *(.debug_frame)
 .debug_frame   0x0000000000000000      0x140 catboard.o
 .debug_frame   0x0000000000000140       0x80 usb_keyboard.o

.debug_str      0x0000000000000000      0x5fd
 *(.debug_str)
 .debug_str     0x0000000000000000      0x3b2 catboard.o
                                        0x40d (size before relaxing)
 .debug_str     0x00000000000003b2      0x24b usb_keyboard.o
                                        0x353 (size before relaxing)

.debug_loc      0x0000000000000000     0x1102
 *(.debug_loc)
 .debug_loc     0x0000000000000000      0x953 catboard.o
 .debug_loc     0x0000000000000953      0x7af usb_keyboard.o

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
                0x0000000000000000       0x7e
 *(.debug_pubtypes)
 .debug_pubtypes
                0x0000000000000000       0x7e usb_keyboard.o

.debug_ranges   0x0000000000000000       0xb8
 *(.debug_ranges)
 .debug_ranges  0x0000000000000000       0x60 catboard.o
 .debug_ranges  0x0000000000000060       0x58 usb_keyboard.o

.debug_macro
 *(.debug_macro)
OUTPUT(catboard.elf elf32-avr)
LOAD linker stubs

Cross Reference Table

Symbol                                            File
__bad_interrupt                                   /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr35/crtusb162.o
__bss_end                                         /usr/lib/gcc/avr/4.8.2/avr35/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/4.8.2/avr35/libgcc.a(_clear_bss.o)
__data_end                                        /usr/lib/gcc/avr/4.8.2/avr35/libgcc.a(_copy_data.o)
__data_load_start                                 /usr/lib/gcc/avr/4.8.2/avr35/libgcc.a(_copy_data.o)
__data_start                                      /usr/lib/gcc/avr/4.8.2/avr35/libgcc.a(_copy_data.o)
__do_clear_bss                                    /usr/lib/gcc/avr/4.8.2/avr35/libgcc.a(_clear_bss.o)
                                                  usb_keyboard.o
                                                  catboard.o
__do_copy_data                                    /usr/lib/gcc/avr/4.8.2/avr35/libgcc.a(_copy_data.o)
                                                  usb_keyboard.o
                                                  catboard.o
__heap_end                                        /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr35/crtusb162.o
__init                                            /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr35/crtusb162.o
__stack                                           /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr35/crtusb162.o
__vector_1                                        /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr35/crtusb162.o
__vector_10                                       /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr35/crtusb162.o
__vector_11                                       usb_keyboard.o
                                                  /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr35/crtusb162.o
__vector_12                                       usb_keyboard.o
                                                  /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr35/crtusb162.o
__vector_13                                       /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr35/crtusb162.o
__vector_14                                       /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr35/crtusb162.o
__vector_15                                       /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr35/crtusb162.o
__vector_16                                       /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr35/crtusb162.o
__vector_17                                       /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr35/crtusb162.o
__vector_18                                       /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr35/crtusb162.o
__vector_19                                       /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr35/crtusb162.o
__vector_2                                        /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr35/crtusb162.o
__vector_20                                       /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr35/crtusb162.o
__vector_21                                       /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr35/crtusb162.o
__vector_22                                       /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr35/crtusb162.o
__vector_23                                       /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr35/crtusb162.o
__vector_24                                       /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr35/crtusb162.o
__vector_25                                       /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr35/crtusb162.o
__vector_26                                       /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr35/crtusb162.o
__vector_27                                       /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr35/crtusb162.o
__vector_28                                       /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr35/crtusb162.o
__vector_3                                        /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr35/crtusb162.o
__vector_4                                        /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr35/crtusb162.o
__vector_5                                        /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr35/crtusb162.o
__vector_6                                        /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr35/crtusb162.o
__vector_7                                        /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr35/crtusb162.o
__vector_8                                        /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr35/crtusb162.o
__vector_9                                        /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr35/crtusb162.o
__vector_default                                  /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr35/crtusb162.o
__vectors                                         /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr35/crtusb162.o
_exit                                             /usr/lib/gcc/avr/4.8.2/avr35/libgcc.a(_exit.o)
caps_lock_change_layer                            catboard.o
caps_lock_led                                     catboard.o
change_layout                                     catboard.o
col_bit                                           catboard.o
col_pin                                           catboard.o
exit                                              /usr/lib/gcc/avr/4.8.2/avr35/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr35/crtusb162.o
get_code                                          catboard.o
init                                              catboard.o
init_ports                                        catboard.o
key_press                                         catboard.o
key_release                                       catboard.o
keyboard_keys                                     usb_keyboard.o
                                                  catboard.o
keyboard_leds                                     usb_keyboard.o
                                                  catboard.o
keyboard_modifier_keys                            usb_keyboard.o
                                                  catboard.o
last_key                                          catboard.o
layer1                                            catboard.o
layer2                                            catboard.o
layer_fn                                          catboard.o
layer_fnlock                                      catboard.o
layout                                            catboard.o
led                                               catboard.o
locked                                            catboard.o
main                                              catboard.o
                                                  /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr35/crtusb162.o
mod_keys                                          catboard.o
os_mode                                           catboard.o
poll                                              catboard.o
press_time                                        catboard.o
press_time2                                       catboard.o
pressed                                           catboard.o
prev_layer                                        catboard.o
queue                                             catboard.o
release_time                                      catboard.o
repeat_tick                                       catboard.o
repeat_time                                       catboard.o
row_bit                                           catboard.o
row_port                                          catboard.o
send                                              catboard.o
turbo_repeat                                      catboard.o
usb_configured                                    usb_keyboard.o
                                                  catboard.o
usb_init                                          usb_keyboard.o
                                                  catboard.o
usb_keyboard_press                                usb_keyboard.o
                                                  catboard.o
usb_keyboard_send                                 usb_keyboard.o
                                                  catboard.o
